# Generated by Django 4.2.5 on 2023-12-01 13:23

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
                ('description', models.CharField(default='', max_length=1500)),
                ('tagline', models.CharField(default='-', max_length=200, null=True)),
                ('year', models.PositiveIntegerField()),
                ('country', models.CharField(max_length=80)),
                ('watch_time', models.CharField(default='', max_length=40)),
                ('poster', models.URLField(default='')),
                ('world_premier', models.DateField(default=datetime.date.today)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, unique=True)),
                ('en_name', models.CharField(max_length=100, null=True, unique=True)),
                ('photo', models.URLField()),
                ('birth_day', models.DateField(default=datetime.date.today, null=True)),
                ('death_day', models.DateField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserMovieRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField(default=False)),
                ('in_bookmarks', models.BooleanField(default=False)),
                ('is_watched', models.BooleanField(default=False)),
                ('rate', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(10)])),
                ('review', models.TextField(blank=True, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies_database.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField()),
                ('movie', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies_database.movie')),
                ('person', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='movies_database.person')),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='crew',
            field=models.ManyToManyField(related_name='person_movies', through='movies_database.Profession', to='movies_database.person'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genres',
            field=models.ManyToManyField(related_name='film_genres', to='movies_database.genre'),
        ),
        migrations.AddField(
            model_name='movie',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_movies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movie',
            name='watchers',
            field=models.ManyToManyField(related_name='my_watched_movies', through='movies_database.UserMovieRelation', to=settings.AUTH_USER_MODEL),
        ),
    ]
